<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>René Grob&#39;s Blog</title>
    <link>https://renegrob.github.io/</link>
    <description>Recent content on René Grob&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Jul 2022 20:27:04 +0100</lastBuildDate>
    <atom:link href="https://renegrob.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to see HTTP headers and raw output during debugging with cURL</title>
      <link>https://renegrob.github.io/posts/curl-show-headers/</link>
      <pubDate>Tue, 19 Jul 2022 20:27:04 +0100</pubDate>
      <guid>https://renegrob.github.io/posts/curl-show-headers/</guid>
      <description>When debugging, it is often helpful to see the returned HTTP headers and the raw output of a curl request. This can be done using the following command:
curl -X GET -is -o /dev/stdout https://myhost If you need information about the connection establishment and TLS handshake, you can add the -v flag to the command:
curl -X GET -isv -o /dev/stdout https://myhost </description>
    </item>
    <item>
      <title>Call Gradle Wrapper from nested Directory</title>
      <link>https://renegrob.github.io/posts/gradle-wrapper/</link>
      <pubDate>Fri, 29 Oct 2021 20:24:48 +0100</pubDate>
      <guid>https://renegrob.github.io/posts/gradle-wrapper/</guid>
      <description>&lt;p&gt;The following script will allow you to use &lt;code&gt;gw&lt;/code&gt; instead of &lt;code&gt;./gradlew&lt;/code&gt; in any subdirectory. &lt;code&gt;gw&lt;/code&gt; will go up the directory hierarchy until it finds &lt;code&gt;gradlew&lt;/code&gt; or a gradle settings file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to use echo $! to wait for a background process to finish</title>
      <link>https://renegrob.github.io/posts/bash-wait-for-process/</link>
      <pubDate>Wed, 12 May 2021 20:07:57 +0100</pubDate>
      <guid>https://renegrob.github.io/posts/bash-wait-for-process/</guid>
      <description>&lt;p&gt;The &lt;code&gt;echo $!&lt;/code&gt; command returns the process ID of the most recently started background process. This can be very useful when you want to wait for a process to finish before continuing with your script.&lt;/p&gt;</description>
    </item>
    <item>
      <title>klogg is the new glogg</title>
      <link>https://renegrob.github.io/posts/klogg/</link>
      <pubDate>Fri, 15 Jan 2021 20:04:19 +0100</pubDate>
      <guid>https://renegrob.github.io/posts/klogg/</guid>
      <description>I used glogg for years but noticed that the last release was in 2017 and noticed that there is a fork called klogg which has many improvements: klogg</description>
    </item>
    <item>
      <title>How to create a random String with Bash</title>
      <link>https://renegrob.github.io/posts/create-random-string-with-bash/</link>
      <pubDate>Fri, 17 Apr 2020 19:52:26 +0100</pubDate>
      <guid>https://renegrob.github.io/posts/create-random-string-with-bash/</guid>
      <description>With this approach you can create nearly every random text or number.
tr -dc &amp;#39;0-9A-Za-z&amp;#39; &amp;lt; /dev/random | head -c10 Explanation: tr -dc deletes all characters except those specified in the argument. This means that we waste a lot of bytes, but for occasional manual use, this is usually acceptable.
| head -c10 prints the first 10 characters of the output of the previous command.</description>
    </item>
  </channel>
</rss>
